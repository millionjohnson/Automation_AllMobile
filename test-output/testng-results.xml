<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="8" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-09-19T17:15:11 IST" name="Default suite" finished-at="2022-09-19T17:15:29 IST" duration-ms="17975">
    <groups>
    </groups>
    <test started-at="2022-09-19T17:15:11 IST" name="Default test" finished-at="2022-09-19T17:15:29 IST" duration-ms="17975">
      <class name="mobileworld.All_mobiles">
        <test-method signature="OpeningBrowser()[pri:1, instance:mobileworld.All_mobiles@1725dc0f]" started-at="2022-09-19T17:15:11 IST" name="OpeningBrowser" finished-at="2022-09-19T17:15:18 IST" duration-ms="7006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpeningBrowser -->
        <test-method signature="allMobilespage()[pri:2, instance:mobileworld.All_mobiles@1725dc0f]" started-at="2022-09-19T17:15:18 IST" name="allMobilespage" finished-at="2022-09-19T17:15:19 IST" duration-ms="1392" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allMobilespage -->
        <test-method signature="searchingLenovomobiles()[pri:3, instance:mobileworld.All_mobiles@1725dc0f]" started-at="2022-09-19T17:15:19 IST" name="searchingLenovomobiles" finished-at="2022-09-19T17:15:20 IST" duration-ms="1269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchingLenovomobiles -->
        <test-method signature="searchingSamsungmubiles()[pri:4, instance:mobileworld.All_mobiles@1725dc0f]" started-at="2022-09-19T17:15:20 IST" name="searchingSamsungmubiles" finished-at="2022-09-19T17:15:21 IST" duration-ms="1164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchingSamsungmubiles -->
        <test-method signature="wrongApple()[pri:5, instance:mobileworld.All_mobiles@1725dc0f]" started-at="2022-09-19T17:15:21 IST" name="wrongApple" finished-at="2022-09-19T17:15:23 IST" duration-ms="1117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongApple -->
        <test-method signature="wrongSamsung()[pri:6, instance:mobileworld.All_mobiles@1725dc0f]" started-at="2022-09-19T17:15:23 IST" name="wrongSamsung" finished-at="2022-09-19T17:15:24 IST" duration-ms="1138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongSamsung -->
        <test-method signature="twoCharacter()[pri:7, instance:mobileworld.All_mobiles@1725dc0f]" started-at="2022-09-19T17:15:24 IST" name="twoCharacter" finished-at="2022-09-19T17:15:25 IST" duration-ms="1124" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at mobileworld.All_mobiles.twoCharacter(All_mobiles.java:79)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- twoCharacter -->
        <test-method signature="InvalidMob()[pri:8, instance:mobileworld.All_mobiles@1725dc0f]" started-at="2022-09-19T17:15:25 IST" name="InvalidMob" finished-at="2022-09-19T17:15:26 IST" duration-ms="1093" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidMob -->
        <test-method signature="order()[pri:9, instance:mobileworld.All_mobiles@1725dc0f]" started-at="2022-09-19T17:15:26 IST" name="order" finished-at="2022-09-19T17:15:28 IST" duration-ms="2572" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- order -->
      </class> <!-- mobileworld.All_mobiles -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
